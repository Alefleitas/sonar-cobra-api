// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nordelta.cobra.webapi.Repositories.Contexts;

namespace nordelta.cobra.webapi.Migrations
{
    [DbContext(typeof(RelationalDbContext))]
    [Migration("20220407134342_AddLockAdvancePayments")]
    partial class AddLockAdvancePayments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nordelta.cobra.webapi.Models.AccountBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("BusinessUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientCuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DelayStatus")
                        .HasColumnType("int");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<double>("FuturePaymentsAmountUSD")
                        .HasColumnType("float");

                    b.Property<int>("FuturePaymentsCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverduePaymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OverduePaymentsAmountUSD")
                        .HasColumnType("float");

                    b.Property<int>("OverduePaymentsCount")
                        .HasColumnType("int");

                    b.Property<double>("PaidPaymentsAmountUSD")
                        .HasColumnType("float");

                    b.Property<int>("PaidPaymentsCount")
                        .HasColumnType("int");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SalesInvoiceAmountUSD")
                        .HasColumnType("float");

                    b.Property<double>("TotalDebtAmount")
                        .HasColumnType("float");

                    b.Property<string>("WorkStarted")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("AccountBalances");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.AdvanceFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientCuit")
                        .HasColumnType("bigint");

                    b.Property<string>("CodProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Importe")
                        .HasColumnType("real");

                    b.Property<bool>("Informed")
                        .HasColumnType("bit");

                    b.Property<int>("Moneda")
                        .HasColumnType("int");

                    b.Property<float>("Saldo")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdvanceFees");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.AnonymousPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CBU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("DebinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Migrated")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VendorCuit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("AnonymousPayment");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.ArchivoDeuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormatedFileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileName")
                        .IsUnique()
                        .HasFilter("[FileName] IS NOT NULL");

                    b.HasIndex("FormatedFileName");

                    b.HasIndex("HeaderId");

                    b.HasIndex("TrailerId");

                    b.ToTable("ArchivosDeuda");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.DetalleDeuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArchivoDeudaId")
                        .HasColumnType("int");

                    b.Property<string>("CodConcepto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodCondicionIva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodIngresosBrutos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMoneda")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CodigoMonedaTc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DebinId")
                        .HasColumnType("int");

                    b.Property<string>("DescCodigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionLocalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHastaDescuento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHastaPunitorios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaPrimerVenc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FechaSegundoVenc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormasCobroPermitidas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportePrimerVenc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImporteProntoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImporteSegundoVenc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarcaExcepcionCobroComisionDepositante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroComprobante")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NroCuitCliente")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NroCuota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsLibreCuarta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsLibrePrimera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsLibreSegunda")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ObsLibreTercera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefijoCodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relleno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasaPunitorios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoComprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoOperacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UbicManzanaCodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ArchivoDeudaId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("DebinId");

                    b.HasIndex("FechaPrimerVenc");

                    b.HasIndex("NroComprobante");

                    b.HasIndex("NroCuitCliente");

                    b.HasIndex("ArchivoDeudaId", "NroComprobante", "FechaPrimerVenc", "CodigoMoneda", "ObsLibreSegunda")
                        .IsUnique()
                        .HasFilter("[NroComprobante] IS NOT NULL AND [FechaPrimerVenc] IS NOT NULL AND [CodigoMoneda] IS NOT NULL AND [ObsLibreSegunda] IS NOT NULL");

                    b.ToTable("DetallesDeuda");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.HeaderDeuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodCanal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodOrganismo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarcaActualizacionCuentaComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarcaPublicacionOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroEnvio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganismoId")
                        .HasColumnType("int");

                    b.Property<string>("Relleno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimaRendicionProcesada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganismoId");

                    b.ToTable("HeadersDeuda");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.OrganismoDeuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuitEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroAcuerdo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroDigitoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganismosDeuda");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.PublishedDebtFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PublishedDebtFiles");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.TrailerDeuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CantRegistroInformados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ceros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImporteTotalPrimerVencimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relleno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrailersDeuda");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.AutomaticPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("Payer");

                    b.HasIndex("Product");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("AutomaticPayments");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cbu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientCuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cbu");

                    b.HasIndex("ClientCuit");

                    b.HasIndex("Status");

                    b.HasIndex("Id", "IsDeleted");

                    b.HasIndex("ClientCuit", "Cbu", "Currency")
                        .IsUnique()
                        .HasFilter("IsDeleted = 0");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountBalanceId")
                        .HasColumnType("int");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CommunicationChannel")
                        .HasColumnType("int");

                    b.Property<string>("CommunicationCreatorUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommunicationResult")
                        .HasColumnType("int");

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Incoming")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextCommunicationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountBalanceId");

                    b.HasIndex("Client");

                    b.HasIndex("ContactDetailId");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CbuDolar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CbuPeso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvenioDolar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvenioPeso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ContactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComChannel")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryType");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DeliveryType");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DepartmentChangeNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuitCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentChangeNotifications");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ExchangeRateFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UvaExchangeRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileName")
                        .IsUnique()
                        .HasFilter("[FileName] IS NOT NULL");

                    b.ToTable("ExchangeRateFile");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.LockAdvancePayments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("LockedByDate")
                        .HasColumnType("bit");

                    b.Property<bool>("LockedByUser")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LockAdvancePayment");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigurationDays")
                        .HasColumnType("int");

                    b.Property<string>("CronExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("TemplateId");

                    b.ToTable("NotificationType");

                    b.HasDiscriminator<string>("Discriminator").HasValue("NotificationType");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationTypeRole", b =>
                {
                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("NotificationTypeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("NotificationTypeXRole");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationXUser");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Payer");

                    b.HasIndex("TransactionDate");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("PaymentMethod");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PaymentMethod");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleName");

                    b.ToTable("PermissionsXRoles");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PublishDebtRejection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CuitCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroComprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCuota")
                        .HasColumnType("int");

                    b.Property<int>("PublishDebtRejectionFileId")
                        .HasColumnType("int");

                    b.Property<string>("TipoComprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UltimaRendicionProcesada")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublishDebtRejectionFileId");

                    b.ToTable("DetalleDeudaRechazo");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PublishDebtRejectionError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoError")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublishDebtRejectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublishDebtRejectionId");

                    b.ToTable("DetalleDeudaRechazoError");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PublishDebtRejectionFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FileDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArchivoDeudaRechazo");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Quotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<string>("ToCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("Quotations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Quotation");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.RepeatedDebtDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoTransaccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaPrimerVenc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdClienteOracle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdSiteOracle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroComprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCuitCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocialCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RepeatedDebtDetails");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Restriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PermissionDeniedCode")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RestrictionsList");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Name");

                    b.HasIndex("Name", "IsDeleted");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("HtmlBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.TemplateTokenReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateTokenReference");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.UserChangesLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedEntity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("UserChangesLog");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Email", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.DeliveryType");

                    b.HasDiscriminator().HasValue("Email");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Inbox", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.DeliveryType");

                    b.HasDiscriminator().HasValue("Inbox");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DayDue", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DayDue");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DebinApproved", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DebinApproved");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DebinCancelled", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DebinCancelled");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DebinError", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DebinError");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DebinExpired", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DebinExpired");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DebinRejected", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("DebinRejected");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.FutureDue", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("FutureDue");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NextCommunication", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("NextCommunication");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PastDue", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.NotificationType");

                    b.HasDiscriminator().HasValue("PastDue");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Debin", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.PaymentMethod");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("DebinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VendorCuit")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("IssueDate");

                    b.HasIndex("Status");

                    b.HasDiscriminator().HasValue("Debin");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.CAC", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.HasDiscriminator().HasValue("CAC");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.CACUSD", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.HasDiscriminator().HasValue("CACUSD");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.CACUSDCorporate", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.HasDiscriminator().HasValue("CACUSDCorporate");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.DolarMEP", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DolarMEP");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.UVA", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.HasDiscriminator().HasValue("UVA");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.UVAUSD", b =>
                {
                    b.HasBaseType("nordelta.cobra.webapi.Models.Quotation");

                    b.HasDiscriminator().HasValue("UVAUSD");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.ArchivoDeuda", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.ArchivoDeuda.HeaderDeuda", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId");

                    b.HasOne("nordelta.cobra.webapi.Models.ArchivoDeuda.TrailerDeuda", "Trailer")
                        .WithMany()
                        .HasForeignKey("TrailerId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.DetalleDeuda", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.ArchivoDeuda.ArchivoDeuda", "ArchivoDeuda")
                        .WithMany()
                        .HasForeignKey("ArchivoDeudaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nordelta.cobra.webapi.Models.Debin", "Debin")
                        .WithMany("Debts")
                        .HasForeignKey("DebinId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.ArchivoDeuda.HeaderDeuda", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.ArchivoDeuda.OrganismoDeuda", "Organismo")
                        .WithMany()
                        .HasForeignKey("OrganismoId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.AutomaticPayment", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Communication", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.AccountBalance", "AccountBalance")
                        .WithMany("Communications")
                        .HasForeignKey("AccountBalanceId");

                    b.HasOne("nordelta.cobra.webapi.Models.ContactDetail", "ContactDetail")
                        .WithMany()
                        .HasForeignKey("ContactDetailId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Notification", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationType", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.DeliveryType", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nordelta.cobra.webapi.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationTypeRole", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.NotificationType", "NotificationType")
                        .WithMany("NotificationTypeRoles")
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nordelta.cobra.webapi.Models.Role", "Role")
                        .WithMany("NotificationTypeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.NotificationUser", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.Notification", "Notification")
                        .WithMany("NotificationUserList")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Permission", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleName");
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PublishDebtRejection", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.PublishDebtRejectionFile", "ArchivoRechazo")
                        .WithMany("PublishDebtRejections")
                        .HasForeignKey("PublishDebtRejectionFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.PublishDebtRejectionError", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.PublishDebtRejection", "PublishDebtRejection")
                        .WithMany("Errors")
                        .HasForeignKey("PublishDebtRejectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nordelta.cobra.webapi.Models.Debin", b =>
                {
                    b.HasOne("nordelta.cobra.webapi.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
